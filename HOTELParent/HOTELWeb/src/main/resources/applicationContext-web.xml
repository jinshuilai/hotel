<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd" default-lazy-init="true">

	<context:property-placeholder location="classpath*:/mao_bus.properties"
		order="1" ignore-resource-not-found="true" ignore-unresolvable="true" />
	<context:property-placeholder location="classpath*:/mao_web.properties"
		order="0" ignore-resource-not-found="true" ignore-unresolvable="true" />

	<context:component-scan base-package="mao"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<mvc:annotation-driven validator="validator">
		<mvc:message-converters register-defaults="true">
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="features">
					<array>
						<value>DisableCircularReferenceDetect</value>
						<value>BrowserSecure</value>
					</array>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:interceptors>
		<!-- Dev mode / Test mode -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="webContentInterceptor"
				class="org.springframework.web.servlet.mvc.WebContentInterceptor">
				<property name="cacheSeconds" value="0" />
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="openSessionInViewInterceptor"
				class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">
				<property name="sessionFactory" ref="sessionFactory" />
			</bean>
		</mvc:interceptor>
	
	</mvc:interceptors>

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="contentType" value="text/html; charset=UTF-8" />
		<property name="suffix" value="${template.suffix}" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="-1" /><!-- no limit -->
		<property name="maxInMemorySize" value="1048576" /><!-- 100MB -->
	</bean>

	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
    <!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->  
    <property name="defaultErrorView" value="/common/error"></property>  
    <!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->  
    <property name="exceptionAttribute" value="ex"></property>  
    <!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->  
    <!-- <property name="exceptionMappings">  
        <props>  
            <prop key="cn.basttg.core.exception.BusinessException">error-business</prop>  
        </props>  
    </property>  --> 
	</bean> 

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="cookieName" value="${locale.cookieName}" />
		<property name="cookieMaxAge" value="${locale.cookieMaxAge}" />
		<property name="defaultLocale" value="${defaultLocale}" />
	</bean>
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="cacheSeconds" value="${message.cache_seconds}" />
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="basenames">
			<list>
				<value>${message.admin_path}</value>
			</list>
		</property>
	</bean>

	<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths" value="${template.loader_path}" />
		<property name="freemarkerSettings">
			<props>
				<prop key="defaultEncoding">${template.encoding}</prop>
				<prop key="url_escaping_charset">${url_escaping_charset}</prop>
				<prop key="locale">${locale}</prop>
				<prop key="template_update_delay">${template.update_delay}</prop>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="number_format">${template.number_format}</prop>
				<prop key="boolean_format">${template.boolean_format}</prop>
				<prop key="datetime_format">${template.datetime_format}</prop>
				<prop key="date_format">${template.date_format}</prop>
				<prop key="time_format">${template.time_format}</prop>
				<prop key="object_wrapper">freemarker.ext.beans.BeansWrapper</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="base" value="#{servletContext.contextPath}" />
				<entry key="locale" value="${locale}" />
				<entry key="message" value-ref="messageMethod" />
				<!-- <entry key="abbreviate" value-ref="abbreviateMethod" />
				<entry key="currency" value-ref="currencyMethod" />
				<entry key="flash_message" value-ref="flashMessageDirective" />
				<entry key="prmt" value-ref="prmtDirective" />
				<entry key="pagination" value-ref="paginationDirective" />
				<entry key="ad_position" value-ref="adPositionDirective" /> -->
			</map>
		</property>
	</bean>
	<!-- 邮件发送 -->
	<!-- <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">  
		相当于javax.mail.Session中的props属性  
		<property name="javaMailProperties">  
		    <props>  
		        <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
				<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
		        <prop key="mail.debug">${mail.debug}</prop>  
				
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				
		    </props>  
		</property>
	</bean> -->
	<!-- 多线程配置 -->
	<!-- <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	  核心线程数	 
	  <property name="corePoolSize" value="${task.core_pool_size}" />
	  最大线程数  
	  <property name="maxPoolSize" value="${task.max_pool_size}" />
	  队列最大长度
	  <property name="queueCapacity" value="${task.queue_capacity}" />
	  线程池维护线程所允许的空闲时间，默认为60s
	  <property name="keepAliveSeconds" value="${task.keep_alive_seconds}" />
	</bean> -->

</beans>
